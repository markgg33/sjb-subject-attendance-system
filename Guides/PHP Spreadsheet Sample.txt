Installation
Use composer to install PhpSpreadsheet into your project:

------------------------------------------
composer require phpoffice/phpspreadsheet
------------------------------------------

Or also download the documentation and samples if you plan to use them:

------------------------------------------
composer require phpoffice/phpspreadsheet --prefer-source
------------------------------------------

If you are building your installation on a development machine that is on a different PHP version to the server where it will be deployed, or if your PHP CLI version is different from your run-time such as php-fpm or Apache's mod_php, then you might want to configure composer for that. See composer documentation on how to edit your composer.json to ensure that the correct dependencies are retrieved to match your deployment environment.

See CLI vs Application run-time for more details.

Additional Installation Options
If you want to write to PDF, or to include Charts when you write to HTML or PDF, then you will need to install additional libraries:

PDF
For PDF Generation, you can install any of the following, and then configure PhpSpreadsheet to indicate which library you are going to use: - mpdf/mpdf - dompdf/dompdf - tecnickcom/tcpdf

and configure PhpSpreadsheet using:
------------------------------------------
// Dompdf, Mpdf or Tcpdf (as appropriate)
$className = \PhpOffice\PhpSpreadsheet\Writer\Pdf\Dompdf::class;
IOFactory::registerWriter('Pdf', $className);
------------------------------------------

or the appropriate PDF Writer wrapper for the library that you have chosen to install.

Chart Export
For Chart export, we support following packages, which you will also need to install yourself using composer require - jpgraph/jpgraph (this package was abandoned at version 4.0. You can manually download the latest version that supports PHP 8 and above from jpgraph.net) - mitoteam/jpgraph - up to date fork with modern PHP versions support and some bugs fixed.

and then configure PhpSpreadsheet using:

// to use jpgraph/jpgraph
Settings::setChartRenderer(\PhpOffice\PhpSpreadsheet\Chart\Renderer\JpGraph::class);
//or
// to use mitoteam/jpgraph
Settings::setChartRenderer(\PhpOffice\PhpSpreadsheet\Chart\Renderer\MtJpGraphRenderer::class);
One or the other of these libraries is necessary if you want to generate HTML or PDF files that include charts; or to render a Chart to an Image format from within your code. They are not necessary to define charts for writing to Xlsx files. Other file formats don't support writing Charts.

Hello World
This would be the simplest way to write a spreadsheet:

<?php

require 'vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;

$spreadsheet = new Spreadsheet();
$activeWorksheet = $spreadsheet->getActiveSheet();
$activeWorksheet->setCellValue('A1', 'Hello World !');

$writer = new Xlsx($spreadsheet);
$writer->save('hello world.xlsx');




function getSubjectsByFaculty()
{
    global $conn;
    $sql = "SELECT subjects.code, subjects.title FROM subjects 
            JOIN faculty_subjects ON subjects.id = faculty_subjects.subject_id
            WHERE faculty_subjects.faculty_id = ?";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $subjects = [];
        while ($row = mysqli_fetch_assoc($result)) {
            $subjects[] = [
                'code' => $row['code'],
                'title' => $row['title']
            ];
        }
        return $subjects;
    } else {
        return [];
    }
}


 <div class="subject-changer">
                        <h3>SUBJECT 1</h3>
                    </div>
                    <div class="subject-changer">
                        <h3>SUBJECT 2</h3>
                    </div>
                    <div class="subject-changer">
                        <h3>SUBJECT 3</h3>
                    </div>
                    <div class="subject-changer">
                        <h3>SUBJECT 4</h3>
                    </div>
                    <div class="subject-changer">
                        <h3>SUBJECT 5</h3>
                    </div>


                    // Function to get faculty subjects based on faculty ID WORKING BUT NOT ACCURATE
function getFacultySubjects()
{
    global $conn;
    $sql = "SELECT subjects.subject_code, subjects.subject_title
                            FROM faculty_subjects
                            INNER JOIN subjects ON faculty_subjects.subject_id = subjects.subject_id
                            WHERE faculty_subjects.faculty_id = faculty_id";
    $result = mysqli_query($conn, $sql);

    if ($result) {
        $subjects = [];
        while ($row = mysqli_fetch_assoc($result)) {
            $subjects[] = $row;
        }
        return $subjects;
    } else {
        return [];
    }
}

<?php

                    echo "Fetching subjects for faculty ID: " . htmlspecialchars($faculty_id) . "<br>";
                    // Get the subjects for the logged-in faculty
                    $facultySubjects = getFacultySubjects();
                    if (!empty($facultySubjects)) {
                        foreach ($facultySubjects as $subject) {
                            echo '<div class="subject-changer">';
                            echo '<h3>' . htmlspecialchars($subject['subject_title']) . ' (' . htmlspecialchars($subject['subject_code']) . ')</h3>';
                            echo '</div>';
                        }
                    } else {
                        echo "<p>No subjects found for this faculty.</p>";
                    }
                    ?>